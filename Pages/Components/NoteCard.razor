@using Notes.Data

<div class="note-card">
    <div class="note-tools-box">
        <div class="note-tools">
            <button @onclick="() => OnEdit.InvokeAsync(Note)" class="navbar-toggler" type="button">
                <span class="bi bi-pencil icon-bootstrap small"></span>
            </button>
            <button @onclick="() => OnTask.InvokeAsync(Note)" class="navbar-toggler" type="button">
                <span class="bi bi-check2-circle icon-bootstrap small"></span>
            </button>
            <button @onclick="() => OnDelete.InvokeAsync(Note.Id)" class="navbar-toggler" type="button">
                <span class="bi bi-trash3 icon-bootstrap small"></span>
            </button>
            <button class="navbar-toggler" type="button">
                <span class="bi bi-three-dots-vertical icon-bootstrap small"></span>
            </button>
        </div>
    </div>

    @* @if (Note.Task.DeadLine != null)
    {
        <div class="task-card">
            <input type="checkbox"/>
        </div>
    } *@

    <div class="card-note-content" @onclick="() => OnEdit.InvokeAsync(Note)">
        <h2 class="card-title">
            <span>@Note.Title</span>
        </h2>
        <div class="card-content">
            <p>
                @Note.Content
            </p>
        </div>
    </div>
</div>

@code {
    [Parameter] public Note Note { get; set; } = new Note();

    [Parameter] public EventCallback<Note> OnEdit { get; set; }

    [Parameter] public EventCallback<Note> OnTask { get; set; }

    [Parameter] public EventCallback<int> OnDelete { get; set; }
}
