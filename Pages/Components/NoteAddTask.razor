@using Notes.Data
@inject NoteService NoteService

<div class="add-task-container">
    <div class="add-task-card">

        <div class="titulo-card">
            <h3>Editando essa tarefa</h3>
        </div>

        <div class="task-dateTime">
            <input type="date" id="deadLine-day" placeholder="Data" @bind-value="Note.Task.DeadLine">
            <input type="time" id="deadLine-hour" placeholder="Horas" @bind-value="Note.Task.DeadLine">
        </div>

        <div class="add-task-options">
            <button @onclick="RemoverTask">Remover Tarefa</button>

            @if (Note.Task.Done != false)
            {
                <button @onclick="() => ReabrirTask() ">Retomar Tarefa</button>
            }
            else
            {
                <button @onclick="() => ConcluirTask() ">Concluir</button>
            }
            <button @onclick="HandleSave">OK</button>
        </div>
    </div>
</div>

@code {
    [Parameter] public Note Note { get; set; } = new Note();
    [Parameter] public EventCallback OnSave { get; set; }

    private async Task HandleSave()
    {
        await OnSave.InvokeAsync();
    }

    private async Task ConcluirTask()
    {
        Note.Task.Done = true;
        await HandleSave();
    }

    private async Task ReabrirTask()
    {
        Note.Task.Done = false;
        await NoteService.UpdateNoteAsync(Note);
    }

    private async Task RemoverTask()
    {
        Note.Task = new TaskNote();
        await HandleSave();
    }
}